#file: noinspection YAMLSchemaValidation
name: "run-with-uv"
description: ""
inputs:
  run-tasks:
    description: "Set of tasks to be executed by uv run"
    example: '["tox -e lint", "tox"]'
    required: "true"
  shell:
    description: "The shell to use for any steps that use shells"
    default: "bash"
    required: "true"

runs:
  using: "composite"
  steps:

    - name: "Restore UV"
      id: cache-uv
      uses: actions/cache/restore@v4
      with:
        path: |
          /home/runner/.local/bin/uv
          /home/runner/.local/bin/uvx
        key: v1-${{ runner.os }}-uv

    - name: "Install UV"
      if: steps.cache-uv.outputs.cache-hit != 'true'
      shell: ${{ inputs.shell }}
      run: |
        # TODO: Should check version and binary checksum
        curl -LsSf https://astral.sh/uv/install.sh | sh

    - name: "Save UV"
      uses: actions/cache/save@v4
      if: steps.cache-uv.outputs.cache-hit != 'true'
      with:
        path: |
          /home/runner/.local/bin/uv
          /home/runner/.local/bin/uvx
        key: v1-${{ runner.os }}-uv

    - name: "Restore Dependencies"
      id: cache-dependencies
      uses: actions/cache/restore@v4
      with:
        path: |
          /home/runner/.cache/uv
        key: v1-${{ runner.os }}-uv-dependencies-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('tox.ini') }}

    - name: "Sync Dependencies"
      shell: ${{ inputs.shell }}
      run: |
        uv sync

    - name: "Run Tasks"
      shell: ${{ inputs.shell }}
      run: uv run ${{ inputs.run-tasks }}

    - name: "Cleanup UV Cache"
      if: steps.cache-dependencies.outputs.cache-hit != 'true'
      shell: ${{ inputs.shell }}
      run: uv cache prune --ci

    - name: "Save UV"
      uses: actions/cache/save@v4
      if: steps.cache-dependencies.outputs.cache-hit != 'true'
      with:
        path: |
          /home/runner/.cache/uv
        key: v1-${{ runner.os }}-uv-dependencies-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('tox.ini') }}
